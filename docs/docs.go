// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/decks": {
            "post": {
                "description": "Creates a new deck with cards.",
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new deck.",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Activate or deactivate cards shuffling.",
                        "name": "shuffle",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "AS,2S",
                        "description": "Comma separated card codes to create a custom deck. If not sent, the regular 52 cards deck will be created.",
                        "name": "cards",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.newDeckResponse"
                        }
                    }
                }
            }
        },
        "/decks/withdrawals/{id}": {
            "get": {
                "description": "Draw an amount of cards given a deck.",
                "produces": [
                    "application/json"
                ],
                "summary": "Draw cards from a deck.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Amount of cards to draw",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.drawCardsResp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/decks/{id}": {
            "get": {
                "description": "Opens a deck, showing all its cards.",
                "produces": [
                    "application/json"
                ],
                "summary": "Opens a deck.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Deck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Card": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "suit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity.Deck": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Card"
                    }
                },
                "deck_id": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "shuffled": {
                    "type": "boolean"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.drawCardsResp": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Card"
                    }
                }
            }
        },
        "v1.newDeckResponse": {
            "type": "object",
            "properties": {
                "deck_id": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "shuffled": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Decks API",
	Description:      "This is a server to handle a cards deck.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
